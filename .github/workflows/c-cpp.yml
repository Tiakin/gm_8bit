name: Build

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: debian:stable-slim
    steps:
      -
        name: Install dependencies
        run: |
          dpkg --add-architecture i386
          apt update
          apt install -y build-essential git libstdc++6:i386 gcc-multilib g++-multilib wget
      - name: Checkout code
        uses: actions/checkout@v3
      -
        name: Clone garrysmod_common
        run: git clone --branch master --depth 1 https://github.com/danielga/garrysmod_common
      -
        name: Update submodules
        run: |
          cd garrysmod_common
          git submodule update --init --recursive
      -
        name: Download premake5
        run: |
          wget https://github.com/premake/premake-core/releases/download/v5.0.0-beta4/premake-5.0.0-beta4-linux.tar.gz -O premake.tar.gz
          tar -xzf premake.tar.gz
          chmod +x premake5
          rm premake.tar.gz
      -
        name: Generate project files
        run: ./premake5 --os=linux --gmcommon=./garrysmod_common gmake2
      -
        name: Build
        run: |
          cd projects/linux/gmake2
          make
      -
       uses: actions/upload-artifact@v4
       with:
         name: gmsv_eightbit_linux.dll
         path: projects/linux/gmake/x86/ReleaseWithSymbols/gmsv_eightbit_linux.dll
  build-windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        path: 'garrysmod_common'
        ref: x86-64-support-sourcesdk
    - name: Install Premake
      run: |
         curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-windows.zip -o premake.zip
         tar -xf premake.zip
    - name: Generate Project
      run: |
        ./premake5.exe --gmcommon=garrysmod_common vs2019
    - name: Build
      run: |
        cd projects/windows/vs2019
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=ReleaseWithSymbols /p:Platform=Win32 eightbit.sln
    - uses: actions/upload-artifact@v4
      with:
        name: gmsv_eightbit_windows.dll
        path: projects/windows/vs2019/x86/ReleaseWithSymbols/gmsv_eightbit_win32.dll
    - name: Build 64
      run: |
        cd projects/windows/vs2019
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=ReleaseWithSymbols /p:Platform=x64 eightbit.sln
    - uses: actions/upload-artifact@v4
      with:
        name: gmsv_eightbit_win64.dll
        path: projects/windows/vs2019/x86_64/ReleaseWithSymbols/gmsv_eightbit_win64.dll

